Используя С++ корректно реализовать следующую задачу:

Откуда-то дано:


      class Request
      {
      };

      // возвращает NULL, если объект stopSignal указывает на необходимость остановки,
      // либо указатель на память, которую в дальнейшем требуется удалить
      Request* GetRequest(Stopper stopSignal) throw(); 

      // обрабатывает запрос, но память не удаляет, завершает обработку досрочно, если
      // объект stopSignal указывает на необходимость остановки
      void ProcessRequest(Request* request, Stopper stopSignal) throw();


Задача: 

    1) Организовать приём запросов, для этого класть в одну очередь задания, возвращаемые функцией GetRequest.
    2) Запустить несколько обрабатывающих запросы потоков (переменное число, но не менее двух), которые должны обрабатывать поступающие из очереди задания с помощью ProcessRequest.
    3) Поработать в течение 30 секунд.
    4) Корректно остановить все потоки. Если остались необработанные задания, не обрабатывать их и корректно удалить.
    5) Завершить программу.

Тип Stopper должен быть определён вами и должен представлять собой механизм досрочной остановки выполняемого действия (предполагается, что GetRequest и ProcessRequest будут его корректно использовать).
Вызов GetRequest может не сразу возвращать задания.
Вызов ProcessRequest может не мгновенно обрабатывать задание.
